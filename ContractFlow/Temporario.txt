Aqui estão os Dockerfiles para os componentes que você solicitou:

1. **Dockerfile para o MySQL**:

```Dockerfile
FROM mysql:8.0

ENV MYSQL_DATABASE=mydb
ENV MYSQL_USER=myuser
ENV MYSQL_PASSWORD=mypassword
ENV MYSQL_ROOT_PASSWORD=rootpassword

COPY sql/init-db.sql /docker-entrypoint-initdb.d/

EXPOSE 3306

CMD ["mysqld"]
```

2. **Dockerfile para o Nginx (comunicação entre microserviços Django e MySQL)**:

```Dockerfile
FROM nginx:latest

COPY nginx1/nginx.conf /etc/nginx/nginx.conf
COPY nginx1/default.conf /etc/nginx/conf.d/default.conf
COPY nginx1/mime.types /etc/nginx/mime.types
COPY nginx1/fastcgi_params /etc/nginx/fastcgi_params
COPY nginx1/uwsgi_params /etc/nginx/uwsgi_params
COPY nginx1/ssl /etc/nginx/ssl

EXPOSE 80
EXPOSE 443

CMD ["nginx", "-g", "daemon off;"]
```

3. **Dockerfile para o Django (microserviço buscando dados do information_schema.tables)**:

```Dockerfile
FROM python:3.9

WORKDIR /app

COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY . .

CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]
```

4. **Dockerfile para o Nginx (comunicação entre APIs FastAPI e microserviço Django)**:

```Dockerfile
FROM nginx:latest

COPY nginx2/nginx.conf /etc/nginx/nginx.conf
COPY nginx2/default.conf /etc/nginx/conf.d/default.conf
COPY nginx2/mime.types /etc/nginx/mime.types
COPY nginx2/fastcgi_params /etc/nginx/fastcgi_params
COPY nginx2/uwsgi_params /etc/nginx/uwsgi_params
COPY nginx2/ssl /etc/nginx/ssl

EXPOSE 80
EXPOSE 443

CMD ["nginx", "-g", "daemon off;"]
```

5. **Dockerfile para a API FastAPI**:

```Dockerfile
FROM python:3.9

WORKDIR /app

COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY . .

CMD ["uvicorn", "run:app", "--host", "0.0.0.0", "--port", "8000"]
```

6. **Dockerfile para o Nginx (comunicação entre APIs FastAPI e front-end React)**:

```Dockerfile
FROM nginx:latest

COPY nginx3/nginx.conf /etc/nginx/nginx.conf
COPY nginx3/default.conf /etc/nginx/conf.d/default.conf
COPY nginx3/mime.types /etc/nginx/mime.types
COPY nginx3/fastcgi_params /etc/nginx/fastcgi_params
COPY nginx3/uwsgi_params /etc/nginx/uwsgi_params
COPY nginx3/ssl /etc/nginx/ssl

EXPOSE 80
EXPOSE 443

CMD ["nginx", "-g", "daemon off;"]
```

7. **Dockerfile para o React (front-end)**:

```Dockerfile
FROM node:14 as build-stage

WORKDIR /app

COPY package*.json ./
RUN npm ci

COPY . .
RUN npm run build

FROM nginx:latest as production-stage

COPY --from=build-stage /app/build /usr/share/nginx/html

EXPOSE 80
EXPOSE 443

CMD ["nginx", "-g", "daemon off;"]
```

Certifique-se de que os diretórios e arquivos de configuração do Nginx estejam corretamente organizados e copiados para os respectivos Dockerfiles. Além disso, verifique se os requisitos do Django e da API FastAPI estão corretamente especificados nos arquivos `requirements.txt`.
